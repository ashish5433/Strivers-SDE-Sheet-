bool isValidParenthesis(string s)
{
    // Write your code here.
    stack<char> a;
    for(int i=0;i<s.size();i++){
      if (s[i] == '[' || s[i] == '{' || s[i] == '(') {
        a.push(s[i]);
        // cout<<a.top()<<endl;
      } else if (a.empty())
        return 0;
      else {
        char c = a.top();
        a.pop();
        if (s[i] == ')' && c == '(')
          continue;
        else if (s[i] == '}' && c == '{')
          continue;

        else if (s[i] == ']' && c == '[')
          continue;
        else
          return 0;
      }
    }
if(a.empty())return 1;
else return 0;
}
