#include <bits/stdc++.h>

/****************************************************************

    Following is the class structure of the Node class:

        class Node
        {
        public:
	        int data;
	        Node *next;
	        Node(int data)
	        {
		        this->data = data;
		        this->next = NULL;
	        }
        };

*****************************************************************/

 Node *reverseKGroup(Node *head, int idx, int b[], int n)
    {
        if(idx >= n)
            return head;
        if (!head)
            return head;
        if(!b[idx])
            return reverseKGroup(head, idx + 1, b, n);
        int i = 0;
        Node *prev = nullptr, *curr = head, *nx = nullptr;
        while (curr)
        {
            curr = curr->next;
            i++;
        }

        if (i < b[idx])
        {
            curr = head;
            while (curr)
            {
                nx = curr->next;
                curr->next = prev;
                prev = curr;
                curr = nx;
            }
            return prev;
        }

        i = 0;
        curr = head;
        while (i < b[idx] and curr)
        {
            nx = curr->next;
            curr->next = prev;
            prev = curr;
            curr = nx;
            i++;
        }
        if (nx)
            head->next = reverseKGroup(nx, idx + 1, b, n);
        return prev;
    }
    Node *getListAfterReverseOperation(Node *head, int n, int b[])
    {
        if (!head or !n)
            return head;
        return reverseKGroup(head, 0, b, n);
    }
