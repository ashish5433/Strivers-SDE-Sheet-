#include <bits/stdc++.h> 
/************************************************************

Following is the Binary Tree node class
    
template <typename T = int>
class TreeNode
{
public:
    T data;
    TreeNode<T> *left;
    TreeNode<T> *right;

    TreeNode(T val)
    {
        this->data = val;
        left = NULL;
        right = NULL;
    }

    ~TreeNode()
    {
        if (left != NULL)
        {
            delete left;
        }
        if (right != NULL)
        {
            delete right;
        }
    }
};

************************************************************/

vector<int> verticalOrderTraversal(TreeNode<int> *root)
{

    vector<int> ans;
    if(root==NULL)return ans;
    queue<pair<TreeNode<int>*,int>> q;
    priority_queue<pair<int,pair<int,int>>> pq;
    map<int,int> m;
    q.push({root,0});

    while(!q.empty()){
        TreeNode<int> * root=q.front().first;
        int pos=q.front().second;
        pq.push({pos, {m[pos],root->data}});
        m[pos]++;
        q.pop();
        if(root->left)q.push({root->left,pos-1});
        if(root->right)q.push({root->right,pos+1});


    }
    while(!pq.empty()){
        ans.push_back(pq.top().second.second);
        pq.pop();
    }
    reverse(ans.begin(),ans.end());
    return ans;

}
