#include <bits/stdc++.h> 
/*************************************************************
 
    Following is the Binary Tree node structure.

    class BinaryTreeNode 
    {
    public : 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/

vector<int> bottomView(BinaryTreeNode<int> *root) {

queue<pair<BinaryTreeNode<int>*,int>> q;
map<int,int> m;

q.push({root, 0});
while(!q.empty()){
    BinaryTreeNode<int> * root=q.front().first;
    int pos=q.front().second;
    m[pos]=root->data;
    q.pop();
   if(root->left){
     q.push({root->left, pos - 1});
    }
    if(root->right){
      q.push({root->right, pos + 1});
    }
}

vector<int> ans;
for(auto it:m){
    ans.push_back(it.second);
}
return ans;
}
