#include <bits/stdc++.h> 
/**********************************************************

    Following is the Binary Tree Node structure:

    template <typename T>
    class BinaryTreeNode {
        public: 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this->data = data;
            left = NULL;
            right = NULL;
        }

        ~BinaryTreeNode() {
            if (left)
                delete left;
            if (right)
                delete right;
        }
    };
***********************************************************/
void solve(BinaryTreeNode<int>* root,vector<int> &v){

    if(root==NULL)return;

    solve(root->left,v);
    v.push_back(root->data);
    solve(root->right,v);
}
bool pairSumBst(BinaryTreeNode<int> *root, int k)
{
    // Write your code here
    vector<int> v;

    solve(root,v);

   
    

   
   
    int strt=0,ls=v.size()-1;
    while(strt<ls){
        if(k==v[strt]+v[ls])return 1;

        if(k>v[strt]+v[ls]){
            strt++;
        }
        else ls--;
    }

    return 0;
}
