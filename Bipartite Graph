class Solution {
public:
    bool bfs(queue<int> &q,vector<int> &color,vector<vector<int>>& gr){

        while(!q.empty()){
            int node=q.front();
            q.pop();
            if(color[node]==-1)color[node]=0;
            for(auto it:gr[node]){
                if(color[it]==-1){
                    color[it]=!color[node];
                    q.push(it);
                }
                else if(color[it]==color[node])return 0;
            }

        }

        return 1;
    }
    bool isBipartite(vector<vector<int>>& gr) {
        int n=gr.size();
        queue<int> q;
        vector<int> color(n,-1);

        for(int i=0;i<n;i++){
            if(color[i]==-1){
                q.push(i);
                bool ans=bfs(q,color,gr);
                if(ans==0)return 0;
            }
        }
        return 1;
    }
};
