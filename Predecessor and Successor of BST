#include <bits/stdc++.h> 
/*************************************************************

    Following is the Binary Tree node structure

    template <typename T>

    class BinaryTreeNode
    {
    public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }

        ~BinaryTreeNode() {
            if (left)
            {
                delete left;
            }
            if (right)
            {
                delete right;
            }
        }
    };

*************************************************************/

pair<int,int> predecessorSuccessor(BinaryTreeNode<int>* root, int key)
{
    // Write your code here.
    int pred=-1,suc=INT_MAX;
    bool hassuc=false,haspred=false;
    BinaryTreeNode<int> * curr=root;
    
    while(curr){
       
       

        if(curr->data>key){
            suc=min(suc,curr->data);
            hassuc=true;
            curr=curr->left;
        }
        else curr=curr->right;

    }
    curr=root;
    while(curr){
        if(curr->data<key){
            pred=max(pred,curr->data);
            haspred=true;
            curr=curr->right;
        }
        else curr=curr->left;

    }
    if(!hassuc)suc=-1;
    if(!haspred)pred=-1;
    return {pred,suc};
}
