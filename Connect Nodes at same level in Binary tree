#include <bits/stdc++.h> 
/*
    ----------------- Binary Tree node class for reference -----------------

    template <typename T>
    class BinaryTreeNode {
        public : 
            T data;
            BinaryTreeNode<T> *left;
            BinaryTreeNode<T> *right;
            BinaryTreeNode<T> *next;

            BinaryTreeNode(T data) {
                this -> data = data;
                left = NULL;
                right = NULL;
                next = NULL;
            }
    };
*/

void connectNodes(BinaryTreeNode< int > *root) {
    // Write your code here.
    if(!root)return;
    root->next=NULL;
    queue<BinaryTreeNode<int>*> q;

    q.push(root);

    while(!q.empty()){
        int n=q.size();
        vector<BinaryTreeNode<int>*> v;

        for(int i=0;i<n;i++){
            BinaryTreeNode<int>* curr=q.front();
            q.pop();

            if(curr->left){
                v.push_back(curr->left);
                q.push(curr->left);
            }
            if(curr->right){
                v.push_back(curr->right);
                q.push(curr->right);
            }
        }
        if(v.size()==0)continue;
        for(int i=0;i<v.size()-1;i++){
           BinaryTreeNode<int>* node=v[i],*node1=v[i+1];
           node->next=node1;

        }
        v[v.size()-1]->next=NULL;

    }

    return;
}
