 #include<bits/stdc++.h>
 int largestRectangle(vector < int > & h) {
   // Write your code here.
  int n=h.size();
   vector<int> left(n,-1);
   vector<int> ryt(n,-1);
   stack<pair<int,int>> s;

   for(int i=n-1;i>=0;i--){
     if(i==n-1)
       s.push({h[i], i});
     else {
      
      if(h[i]>s.top().first){
         ryt[i]=s.top().second;
         s.push({h[i],i});
       }
       else {
         while(!s.empty() && s.top().first>=h[i]){
            s.pop();
         }
         if(!s.empty())ryt[i]=s.top().second;

         s.push({h[i],i});

       }
      
       }
     }
      
      while(!s.empty())s.pop();
      for(int i=0;i<n;i++){
     if(i==0)
       s.push({h[i], i});
     else {
      
      if(h[i]>s.top().first){
         left[i]=s.top().second;
         s.push({h[i],i});
       }
       else {
         while(!s.empty() && s.top().first>=h[i]){
            s.pop();
         }
         if(!s.empty())left[i]=s.top().second;

         s.push({h[i],i});

       }
      
       }
     }
   int ans=0;
   for(int i=0;i<n;i++){
     if(ryt[i]==-1)ryt[i]=n;
     ans=max(ans,h[i]*(ryt[i]-left[i]-1));
   }

   

   
   return ans;

 }
