#include <bits/stdc++.h> 
vector<int> dijkstra(vector<vector<int>> &vec, int v, int e, int s) {
    // Write your code here.
    int n=2147483647;
    vector<int> ans(v,n);
    ans[s]=0;
    vector<pair<int,int>>adj[v];
    queue<pair<int,int>> pq;
    for(int i=0;i<vec.size();i++){

        int u=vec[i][0];

        int v=vec[i][1];

        int wt=vec[i][2];

        adj[u].push_back({v,wt});

        adj[v].push_back({u,wt});

    }
    pq.push({0,0});
    while(!pq.empty()){

        int dist=pq.front().first;
        int node=pq.front().second;
        pq.pop();
        for(auto it:adj[node]){
            if(dist+it.second<ans[it.first]){
                ans[it.first]=dist+it.second;
                pq.push({ans[it.first],it.first});
            }

        }
    }
    return ans;
}
