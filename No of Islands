#include<bits/stdc++.h>

void bfs(int row,int col,int n,int m,int** a,vector<vector<int>> &vis){
   queue<pair<int,int>> q;
   q.push({row,col});
   vis[row][col]=1;

   while(!q.empty()){
      int row=q.front().first;
      int col=q.front().second;
      q.pop();
      for(int i=-1;i<2;i++){
         for(int j=-1;j<2;j++){
            int nrow=row+i;
            int ncol=col+j;
            if(nrow>=0 && nrow<n && ncol>=0 && ncol<m && !vis[nrow][ncol] && a[nrow][ncol]){
               vis[nrow][ncol]=1;
               q.push({nrow,ncol});

            }

         }

      }

   }


}


int getTotalIslands(int** a, int n, int m)
{
   int cnt=0;
   vector<vector<int>> vis(n,vector<int>(m,0));

   for(int i=0;i<n;i++){
      for(int j=0;j<m;j++){
         if(vis[i][j]==0 && a[i][j]){
            cnt++;
            bfs(i,j,n,m,a,vis);
         }
      }
   }
return cnt;

}


