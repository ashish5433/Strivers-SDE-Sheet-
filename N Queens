#include<bits/stdc++.h>
bool ispos(int row,int col,vector<vector<int>> &v,int n){
int drow=row;
int dcol=col;
while(row>=0 && col>=0){
    if(v[row][col]==1)return 0;
    row--;
    col--;
}
row=drow;
col=dcol;
while(col>=0){
    if(v[row][col]==1)return 0;
    col--;
}
row=drow;
col=dcol;
while(col>=0 && row<n){
    if(v[row][col]==1)return 0;
    row++;
    col--;
}


return 1;

}




void solve(int col,int n,vector<vector<int>> &v,vector<vector<int>> &ans){

if(col==n){
    vector<int> temp;
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            temp.push_back(v[i][j]);
        }
        
    }
    ans.push_back(temp);
    return;
}
for(int i=0;i<n;i++){
if(ispos(i,col,v,n)){
    v[i][col]=1;
    solve(col+1,n,v,ans);
    v[i][col]=0;
}
}

}


vector<vector<int>> solveNQueens(int n) {
    // Write your code here.
    // if(n<4)return;
    vector<vector<int>> v(n,vector<int>(n,0)),ans;
    solve(0,n,v,ans);
    
return ans;
}
