#include <bits/stdc++.h> 
/*************************************************************

    Following is the Binary Tree node structure

    class BinaryTreeNode
    {
    public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/
void solve(BinaryTreeNode<int> *root,vector<int> &ans){
    bool flag=1;
    queue<BinaryTreeNode<int>*> q;
    q.push(root);

    while(!q.empty()){
        int n=q.size();
        vector<int> temp(n);
        for(int i=0;i<n;i++){
            BinaryTreeNode<int> * root=q.front();
            q.pop();
            int ind=flag?i:n-i-1;
            temp[ind]=root->data;
            if(root->left)q.push(root->left);
            if(root->right)q.push(root->right);
            
            
        }
        for(auto i:temp)ans.push_back(i);
        flag=!flag;
    }



}
vector<int> zigZagTraversal(BinaryTreeNode<int> *root)
{
    // Write your code here!
    vector<int> ans;
    if(root==NULL)return ans;
    solve(root,ans);
    return ans;
}
