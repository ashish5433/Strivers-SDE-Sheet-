#include <bits/stdc++.h> 
int solve(int n,int k,vector<int> &arr,int &ch, vector<vector<int>> &v){
    if(n==0){
        return 0;
    }
    if(v[n][k]!=-1){
        return 1;
    }
    if(arr[n-1]<=k){
        int ans1=arr[n-1]+solve(n-1,k-arr[n-1],arr,ch,v);
        int ans2=solve(n-1,k,arr,ch,v);
        v[n][k]=ans1 || ans2;
        if(ans1==k || ans2==k){
            ch=1;
        }
    }
    else{
        int ans=solve(n-1,k,arr,ch,v);
        if(ans==k){
            ch=1;
        }
    }
}
bool subsetSumToK(int n, int k, vector<int> &arr) {
    // Write your code here.
    int ch=0;
    vector<vector<int>> v(n+1,vector<int>(k+1,-1));
    solve(n,k,arr,ch,v);
    if(ch)return 1;
    return 0;
}
