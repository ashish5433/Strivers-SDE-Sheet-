#include <bits/stdc++.h> 
vector<int> BFS(int n, vector<pair<int, int>> edges)
{
    // Write your code here
    vector<int> v,adj[n];
    vector<int> vis(n,0);

     for(auto it:edges){
	      adj[it.first].push_back(it.second);
          adj[it.second].push_back(it.first);
	   }
    for(int i=0;i<n;i++){
        sort(adj[i].begin(),adj[i].end());
    }
    queue<int> q;
    q.push(0);
    while(!q.empty()){
        int node=q.front();
        q.pop();
        v.push_back(node);
        vis[node]=1;
        for(auto it:adj[node]){
            if(!vis[it]){
                vis[it]=1;
                q.push(it);
            }
        }
    }
    for(int i=0;i<n;i++){
        if(vis[i]==0)v.push_back(i);
    }
    return v;
}
